name: CI/CD pipeline

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 16.x ]
    outputs:
      package_version: ${{ steps.proj_ver_determiner.outputs.package_version }}
      package_version_tag: ${{ steps.proj_ver_determiner.outputs.package_version_tag }}
      latest_github_tag: ${{ steps.proj_ver_determiner.outputs.latest_github_tag }}
      should_deploy: ${{ steps.proj_ver_determiner.outputs.should_deploy }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Tooling setup

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Information setup

      - name: Pipeline data gatherer
        id: data_gatherer
        run: |
          # Get default branch
          REPO="${{ github.repository }}"
          DEFAULT_BRANCH=(curl -X GET https://api.github.com/repos/$REPO) | jq '.default_branch'

          echo "::set-output name=default_branch::$(echo $DEFAULT_BRANCH)"

      - name: Pipeline conditionals handler
        id: conditionals_handler
        run: |
          DEFAULT_BRANCH="${{ steps.data_gatherer.outputs.default_branch }}"
          GITHUB_REF="${{ github.ref }}"
          CURRENT_BRANCH=`echo $GITHUB_REF | sed -e "s/^refs\/heads\///"`
          GITHUB_EVENT_NAME="${{ github.event_name }}"
          IS_DEFAULT_BRANCH='false'
          IS_PUSH='false'
          IS_PUSH_TO_DEFAULT_BRANCH='false'

          if [ $CURRENT_BRANCH == $DEFAULT_BRANCH ]; then
            IS_DEFAULT_BRANCH='true'
          fi
          if [ $GITHUB_EVENT_NAME == 'push' ]; then
            IS_PUSH='true'
          fi
          if [ $CURRENT_BRANCH == $DEFAULT_BRANCH ] && [ $GITHUB_EVENT_NAME == 'push' ]; then
            IS_PUSH_TO_DEFAULT_BRANCH='true'
          fi

          echo "::set-output name=is_default_branch::$(echo $IS_DEFAULT_BRANCH)"
          echo "::set-output name=is_push::$(echo $IS_PUSH)"
          echo "::set-output name=is_push_to_default_branch::$(echo $IS_PUSH_TO_DEFAULT_BRANCH)"

      - if: steps.conditionals_handler.outputs.is_push_to_default_branch == 'true'
        name: Project version determiner
        id: proj_ver_determiner
        run: |
          PACKAGE_VERSION=$(cat package.json \
            | grep version \
            | head -1 \
            | awk -F: '{ print $2 }' \
            | sed 's/[",]//g')
          PACKAGE_VERSION_TAG=`echo v$PACKAGE_VERSION | sed -e 's/[[:space:]]//'`

          git fetch --all --tags

          LATEST_GITHUB_TAG=`echo $(git describe --abbrev=0 --tags)`
          SHOULD_DEPLOY="false"

          if [[ "$LATEST_GITHUB_TAG" == "$PACKAGE_VERSION_TAG" ]]; then
            SHOULD_DEPLOY="true"
          fi

          echo "::set-output name=package_version::$(echo $PACKAGE_VERSION)"
          echo "::set-output name=package_version_tag::$(echo $PACKAGE_VERSION_TAG)"
          echo "::set-output name=latest_github_tag::$(echo $LATEST_GITHUB_TAG)"
          echo "::set-output name=should_deploy::$(echo $SHOULD_DEPLOY)"

      - name: Create logs directory
        run: |
          mkdir -p logs

      - name: Install dependencies
        run: |
          npm ci --loglevel verbose 2>&1 | tee logs/install.log

      - name: Build the app
        run: |
          npm run build --if-present --loglevel verbose 2>&1 | tee logs/build.log

      - name: Run tests
        run: |
          npm test --loglevel verbose 2>&1 | tee logs/test.log

      - name: Upload logs as artifact
        uses: actions/upload-artifact@v2
        with:
          name: Logs ${{ matrix.node-version }}
          path: logs/

  deploy:
    if: needs.build.outputs.package_version != ''
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Deploy to npm
        run: |
          echo $'registry=https://registry.npmjs.org/\n' //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc

          npm publish --access public

          rm -f .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push GitHub tag
        run: |
          PACKAGE_VERSION=$(cat package.json \
            | grep version \
            | head -1 \
            | awk -F: '{ print $2 }' \
            | sed 's/[",]//g')
          GITHUB_TAG=`echo v$PACKAGE_VERSION | sed -e 's/[[:space:]]//'`

          git config --global user.email "aleksandar.ivanov@singlet.dev"
          git config --global user.name "aleks-ivanov"
          git tag $GITHUB_TAG
          git push origin --tags

      # - name: Deploy app to Heroku
      #   uses: akhileshns/heroku-deploy@v3.12.12
      #   with:
      #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
      #     heroku_app_name: "aais-simple-node-api"
      #     heroku_email: "aleksandar.ivanov@singlet.dev"
